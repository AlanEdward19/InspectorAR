<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InspectorAR</name>
    </assembly>
    <members>
        <member name="T:InspectorAR.Configuration.Controller">
            <summary>
            Configures the controller
            </summary>
        </member>
        <member name="M:InspectorAR.Configuration.Controller.ConfigureController(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the controller
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:InspectorAR.Configuration.Endpoint">
            <summary>
            Endpoint configuration.
            </summary>
        </member>
        <member name="M:InspectorAR.Configuration.Endpoint.ConfigureEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Configuration.IConfigurationSection)">
            <summary>
            Endpoint configuration.
            </summary>
            <param name="app"></param>
            <param name="section"></param>
            <returns></returns>
        </member>
        <member name="T:InspectorAR.Configuration.ErrorHandling">
            <summary>
            Error handling configuration.
            </summary>
        </member>
        <member name="M:InspectorAR.Configuration.ErrorHandling.ConfigureMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Middleware configuration.
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:InspectorAR.Configuration.IoC">
            <summary>
            IoC configuration
            </summary>
        </member>
        <member name="M:InspectorAR.Configuration.IoC.ConfigureIoC(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Configures the IoC
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Configuration.IoC.ConfigureRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the repositories
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Configuration.IoC.ConfigureHandlers(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the handlers
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Configuration.IoC.ConfigureDatabase(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Configures the database
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="T:InspectorAR.Configuration.Migrations">
            <summary>
            Configuration for migrations.
            </summary>
        </member>
        <member name="M:InspectorAR.Configuration.Migrations.UpdateMigrations(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Update migrations.
            </summary>
            <param name="app"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:InspectorAR.Configuration.Swagger">
            <summary>
            Swagger configuration
            </summary>
        </member>
        <member name="M:InspectorAR.Configuration.Swagger.ConfigureSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure swagger
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:InspectorAR.Controllers.ProductController">
            <summary>
            Product controller.
            </summary>
        </member>
        <member name="M:InspectorAR.Controllers.ProductController.GetProductById(System.Guid,InspectorAR.Product.Common.Handlers.ProductQueryHandler,System.Threading.CancellationToken)">
            <summary>
            Get a product by id.
            </summary>
            <param name="id"></param>
            <param name="handler"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Controllers.ProductController.AddProduct(InspectorAR.Product.AddProduct.AddProductCommand,InspectorAR.Product.Common.Handlers.ProductCommandHandler,System.Threading.CancellationToken)">
            <summary>
            Add a new product.
            </summary>
            <param name="command"></param>
            <param name="handler"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Controllers.ProductController.UpdateProduct(System.Guid,InspectorAR.Product.UpdateProduct.UpdateProductCommand,InspectorAR.Product.Common.Handlers.ProductCommandHandler,System.Threading.CancellationToken)">
            <summary>
            Update a product by id.
            </summary>
            <param name="id"></param>
            <param name="command"></param>
            <param name="handler"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Controllers.ProductController.DeleteProduct(System.Guid,InspectorAR.Product.Common.Handlers.ProductCommandHandler,System.Threading.CancellationToken)">
            <summary>
            Delete a product by id.
            </summary>
            <param name="id"></param>
            <param name="handler"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:InspectorAR.Database.DatabaseDbContext">
            <summary>
            Database context for InspectorAR.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:InspectorAR.Database.DatabaseDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{InspectorAR.Database.DatabaseDbContext})">
            <summary>
            Database context for InspectorAR.
            </summary>
            <param name="options"></param>
        </member>
        <member name="P:InspectorAR.Database.DatabaseDbContext.Products">
            <summary>
            Products table.
            </summary>
        </member>
        <member name="T:InspectorAR.Database.Interfaces.IRepository`1">
            <summary>
            Represents a repository.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:InspectorAR.Database.Interfaces.IRepository`1.UnitOfWork">
            <summary>
            Unit of work.
            </summary>
        </member>
        <member name="M:InspectorAR.Database.Interfaces.IRepository`1.AddAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Adds an entity.
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Database.Interfaces.IRepository`1.UpdateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Updates an entity.
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Database.Interfaces.IRepository`1.DeleteAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Deletes an entity.
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Database.Interfaces.IRepository`1.GetByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets an entity by its id.
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:InspectorAR.Database.Interfaces.IUnitOfWork">
            <summary>
            Unit of Work interface.
            </summary>
        </member>
        <member name="M:InspectorAR.Database.Interfaces.IUnitOfWork.SaveEntitiesAsync(System.Threading.CancellationToken)">
            <summary>
            Save entities async.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Database.Interfaces.IUnitOfWork.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Start transaction async.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Database.Interfaces.IUnitOfWork.CommitAsync(System.Threading.CancellationToken)">
            <summary>
            Commit transaction async.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Database.Interfaces.IUnitOfWork.RollbackAsync(System.Threading.CancellationToken)">
            <summary>
            Rollback transaction async.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:InspectorAR.Database.UnitOfWork">
            <summary>
            Unit of work implementation.
            </summary>
            <param name="databaseDbContext"></param>
        </member>
        <member name="M:InspectorAR.Database.UnitOfWork.#ctor(InspectorAR.Database.DatabaseDbContext)">
            <summary>
            Unit of work implementation.
            </summary>
            <param name="databaseDbContext"></param>
        </member>
        <member name="M:InspectorAR.Database.UnitOfWork.SaveEntitiesAsync(System.Threading.CancellationToken)">
            <summary>
            Save entities in database.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Database.UnitOfWork.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Start transaction.
            </summary>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:InspectorAR.Database.UnitOfWork.CommitAsync(System.Threading.CancellationToken)">
            <summary>
            Commit transaction.
            </summary>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:InspectorAR.Database.UnitOfWork.RollbackAsync(System.Threading.CancellationToken)">
            <summary>
            Rollback transaction.
            </summary>
            <param name="cancellationToken"></param>
        </member>
        <member name="T:InspectorAR.Middleware.ExceptionMiddleware">
            <summary>
            Exception middleware to handle exceptions and return a proper response.
            </summary>
            <param name="next"></param>
            <param name="logger"></param>
        </member>
        <member name="M:InspectorAR.Middleware.ExceptionMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{InspectorAR.Middleware.ExceptionMiddleware})">
            <summary>
            Exception middleware to handle exceptions and return a proper response.
            </summary>
            <param name="next"></param>
            <param name="logger"></param>
        </member>
        <member name="M:InspectorAR.Middleware.ExceptionMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoke the middleware.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:InspectorAR.Migrations.initial">
            <inheritdoc />
        </member>
        <member name="M:InspectorAR.Migrations.initial.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:InspectorAR.Migrations.initial.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:InspectorAR.Migrations.initial.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:InspectorAR.Product.AddProduct.AddProductCommand">
            <summary>
            Command to add a product.
            </summary>
        </member>
        <member name="P:InspectorAR.Product.AddProduct.AddProductCommand.Name">
            <summary>
            Name of the product.
            </summary>
        </member>
        <member name="P:InspectorAR.Product.AddProduct.AddProductCommand.Information">
            <summary>
            Information of the product.
            </summary>
        </member>
        <member name="M:InspectorAR.Product.AddProduct.AddProductCommand.#ctor">
            <summary>
            Constructor of the command.
            </summary>
        </member>
        <member name="M:InspectorAR.Product.AddProduct.AddProductCommand.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Constructor of the command with parameters.
            </summary>
            <param name="name"></param>
            <param name="information"></param>
        </member>
        <member name="T:InspectorAR.Product.AddProduct.AddProductCommandValidator">
            <summary>
            Validator for AddProductCommand.
            </summary>
        </member>
        <member name="M:InspectorAR.Product.AddProduct.AddProductCommandValidator.#ctor">
            <summary>
            Validation rules for AddProductCommand.
            </summary>
        </member>
        <member name="T:InspectorAR.Product.Common.Handlers.ProductCommandHandler">
            <summary>
            Handles the commands related to products
            </summary>
            <param name="logger"></param>
            <param name="repository"></param>
        </member>
        <member name="M:InspectorAR.Product.Common.Handlers.ProductCommandHandler.#ctor(Microsoft.Extensions.Logging.ILogger{InspectorAR.Product.Common.Handlers.ProductCommandHandler},InspectorAR.Database.Interfaces.IRepository{InspectorAR.Product.Entities.Product})">
            <summary>
            Handles the commands related to products
            </summary>
            <param name="logger"></param>
            <param name="repository"></param>
        </member>
        <member name="M:InspectorAR.Product.Common.Handlers.ProductCommandHandler.AddProductAsync(InspectorAR.Product.AddProduct.AddProductCommand,System.Threading.CancellationToken)">
            <summary>
            Add a product based on the command
            </summary>
            <param name="command"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Product.Common.Handlers.ProductCommandHandler.UpdateProductAsync(InspectorAR.Product.UpdateProduct.UpdateProductCommand,System.Threading.CancellationToken)">
            <summary>
            Update a product based on the command
            </summary>
            <param name="command"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Product.Common.Handlers.ProductCommandHandler.DeleteProductAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a product based on the id
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:InspectorAR.Product.Common.Handlers.ProductQueryHandler">
            <summary>
            Handles the queries related to products
            </summary>
            <param name="logger"></param>
            <param name="repository"></param>
        </member>
        <member name="M:InspectorAR.Product.Common.Handlers.ProductQueryHandler.#ctor(Microsoft.Extensions.Logging.ILogger{InspectorAR.Product.Common.Handlers.ProductCommandHandler},InspectorAR.Database.Interfaces.IRepository{InspectorAR.Product.Entities.Product})">
            <summary>
            Handles the queries related to products
            </summary>
            <param name="logger"></param>
            <param name="repository"></param>
        </member>
        <member name="M:InspectorAR.Product.Common.Handlers.ProductQueryHandler.GetProductAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get a product based on the id
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:InspectorAR.Product.Common.Models.ProductViewModel">
            <summary>
            Product view model.
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="information"></param>
        </member>
        <member name="M:InspectorAR.Product.Common.Models.ProductViewModel.#ctor(System.Guid,System.String,System.Object)">
            <summary>
            Product view model.
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="information"></param>
        </member>
        <member name="P:InspectorAR.Product.Common.Models.ProductViewModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:InspectorAR.Product.Common.Models.ProductViewModel.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:InspectorAR.Product.Common.Models.ProductViewModel.Information">
            <summary>
            Information
            </summary>
        </member>
        <member name="T:InspectorAR.Product.Entities.Product">
            <summary>
            Product entity.
            </summary>
        </member>
        <member name="P:InspectorAR.Product.Entities.Product.Id">
            <summary>
            Id of the product.
            </summary>
        </member>
        <member name="P:InspectorAR.Product.Entities.Product.Name">
            <summary>
            Name of the product.
            </summary>
        </member>
        <member name="P:InspectorAR.Product.Entities.Product.Information">
            <summary>
            Information of the product.
            </summary>
        </member>
        <member name="P:InspectorAR.Product.Entities.Product.CreatedAt">
            <summary>
            When the product was created
            </summary>
        </member>
        <member name="P:InspectorAR.Product.Entities.Product.UpdatedAt">
            <summary>
            When the product was last updated
            </summary>
        </member>
        <member name="M:InspectorAR.Product.Entities.Product.#ctor(System.Guid,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Constructor of the product.
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="information"></param>
            <param name="createdAt"></param>
            <param name="updatedAt"></param>
        </member>
        <member name="M:InspectorAR.Product.Entities.Product.#ctor(System.String,System.String)">
            <summary>
            Constructor of the product.
            </summary>
            <param name="name"></param>
            <param name="information"></param>
        </member>
        <member name="M:InspectorAR.Product.Entities.Product.#ctor">
            <summary>
            Constructor of the product.
            </summary>
        </member>
        <member name="M:InspectorAR.Product.Entities.Product.UpdateBasedOnCommand(InspectorAR.Product.UpdateProduct.UpdateProductCommand)">
            <summary>
            Method to update the product based on a command.
            </summary>
            <param name="command"></param>
        </member>
        <member name="T:InspectorAR.Product.ProductRepository">
            <summary>
            Repository for the Product entity.
            </summary>
            <param name="databaseDbContext"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:InspectorAR.Product.ProductRepository.#ctor(InspectorAR.Database.DatabaseDbContext,InspectorAR.Database.Interfaces.IUnitOfWork)">
            <summary>
            Repository for the Product entity.
            </summary>
            <param name="databaseDbContext"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="P:InspectorAR.Product.ProductRepository.UnitOfWork">
            <summary>
            Unit of work for the repository
            </summary>
        </member>
        <member name="M:InspectorAR.Product.ProductRepository.AddAsync(InspectorAR.Product.Entities.Product,System.Threading.CancellationToken)">
            <summary>
            Adds a product to the database
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:InspectorAR.Product.ProductRepository.UpdateAsync(InspectorAR.Product.Entities.Product,System.Threading.CancellationToken)">
            <summary>
            Updates a product in the database
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Product.ProductRepository.DeleteAsync(InspectorAR.Product.Entities.Product,System.Threading.CancellationToken)">
            <summary>
            Deletes a product from the database
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:InspectorAR.Product.ProductRepository.GetByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets a product from the database based on the id
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:InspectorAR.Product.UpdateProduct.UpdateProductCommand">
            <summary>
            Command to update a product.
            </summary>
        </member>
        <member name="P:InspectorAR.Product.UpdateProduct.UpdateProductCommand.Id">
            <summary>
            Id of the product.
            </summary>
        </member>
        <member name="P:InspectorAR.Product.UpdateProduct.UpdateProductCommand.Name">
            <summary>
            Name of the product.
            </summary>
        </member>
        <member name="P:InspectorAR.Product.UpdateProduct.UpdateProductCommand.Information">
            <summary>
            Information of the product.
            </summary>
        </member>
        <member name="M:InspectorAR.Product.UpdateProduct.UpdateProductCommand.#ctor">
            <summary>
            Constructor of the command.
            </summary>
        </member>
        <member name="M:InspectorAR.Product.UpdateProduct.UpdateProductCommand.#ctor(System.Guid,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Constructor of the command.
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="information"></param>
        </member>
        <member name="M:InspectorAR.Product.UpdateProduct.UpdateProductCommand.SetId(System.Guid)">
            <summary>
            Method to set the id of the product.
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:InspectorAR.Product.UpdateProduct.UpdateProductCommandValidator">
            <summary>
            Validator for the UpdateProductCommand.
            </summary>
        </member>
        <member name="M:InspectorAR.Product.UpdateProduct.UpdateProductCommandValidator.#ctor">
            <summary>
            Validations for the UpdateProductCommand.
            </summary>
        </member>
    </members>
</doc>
